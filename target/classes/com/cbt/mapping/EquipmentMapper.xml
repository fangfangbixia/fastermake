<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cbt.dao.EquipmentMapper" >
  <resultMap id="BaseResultMap" type="com.cbt.entity.Equipment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="factory_id" property="factoryId" jdbcType="VARCHAR" />
    <result column="equipment_name" property="equipmentName" jdbcType="VARCHAR" />
    <result column="equipment_name_en" property="equipmentNameEn" jdbcType="VARCHAR" />
    <result column="equipment_model" property="equipmentModel" jdbcType="VARCHAR" />
    <result column="equipment_model_en" property="equipmentModelEn" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="parameter" property="parameter" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="type_en" property="typeEn" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, factory_id, equipment_name, equipment_model, equipment_model_en, number, parameter, type, create_date, equipment_name_en,type_en
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from equipment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!-- 查询工厂设备清单 -->
  <select id="selectFactoryEquipment" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from equipment
    where factory_id = #{factoryId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByEquipmentName" resultType="int">
    select count(id) from equipment where   
    equipment_name like  CONCAT('%',#{equipmentName,jdbcType=VARCHAR},'%')  
    and factory_id = #{factoryId,jdbcType=VARCHAR}  
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from equipment
  </select>

  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from equipment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cbt.entity.Equipment" >
    insert into equipment (id, factory_id, equipment_name, equipment_name_en,
      equipment_model, number, parameter, 
      type, create_date)
    values (#{id,jdbcType=INTEGER}, #{factoryId,jdbcType=VARCHAR}, #{equipmentName,jdbcType=VARCHAR},
       #{equipmentNameEn,jdbcType=VARCHAR},#{equipmentModel,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER},
       #{parameter,jdbcType=VARCHAR},#{type,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cbt.entity.Equipment" useGeneratedKeys="true"  keyProperty="id">
    insert into equipment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="factoryId != null" >
        factory_id,
      </if>
      <if test="equipmentName != null" >
        equipment_name,
      </if>
      <if test="equipmentNameEn != null" >
        equipment_name_en,
      </if>
      <if test="equipmentModel != null" >
        equipment_model,
      </if>
      <if test="equipmentModelEn != null" >
        equipment_model_en,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="parameter != null" >
        parameter,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="typeEn!= null" >
        type_en,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null" >
        #{factoryId,jdbcType=VARCHAR},
      </if>
      <if test="equipmentName != null" >
        #{equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="equipmentNameEn != null" >
        #{equipmentNameEn,jdbcType=VARCHAR},
      </if>
      <if test="equipmentModel != null" >
        #{equipmentModel,jdbcType=VARCHAR},
      </if>
      <if test="equipmentModelEn != null" >
        #{equipmentModelEn,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="parameter != null" >
        #{parameter,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="typeEn != null" >
        #{typeEn,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cbt.entity.Equipment" >
    update equipment
    <set>
      <if test="factoryId != null" >
        factory_id = #{factoryId,jdbcType=VARCHAR},
      </if>
      <if test="equipmentName != null" >
        equipment_name = #{equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="equipmentNameEn != null" >
        equipment_name_en = #{equipmentNameEn,jdbcType=VARCHAR},
      </if>
      <if test="equipmentModel != null" >
        equipment_model = #{equipmentModel,jdbcType=VARCHAR},
      </if>
      <if test="equipmentModelEn != null" >
        equipment_model_en = #{equipmentModelEn,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="parameter != null" >
        parameter = #{parameter,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="typeEn != null" >
        type_en = #{typeEn,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cbt.entity.Equipment" >
    update equipment
    set factory_id = #{factoryId,jdbcType=VARCHAR},
      equipment_name = #{equipmentName,jdbcType=VARCHAR},
      equipment_model = #{equipmentModel,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      parameter = #{parameter,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>